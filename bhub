-- // Roblox Utility Hub Full Script // --

-- Anti AFK
for _,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
    v:Disable()
end

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- Main GUI
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.ResetOnSpawn = false

-- Toggle Button (circle, draggable)
local ToggleBtn = Instance.new("TextButton")
ToggleBtn.Size = UDim2.new(0,40,0,40)
ToggleBtn.Position = UDim2.new(0,50,0,200)
ToggleBtn.Text = "￢ﾗﾎ"
ToggleBtn.TextSize = 20
ToggleBtn.BackgroundColor3 = Color3.fromRGB(50,150,250)
ToggleBtn.TextColor3 = Color3.fromRGB(255,255,255)
ToggleBtn.Parent = ScreenGui
ToggleBtn.Active = true
ToggleBtn.Draggable = true

-- Make it circle
local UICorner = Instance.new("UICorner", ToggleBtn)
UICorner.CornerRadius = UDim.new(1,0)

-- Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0,220,0,280)
MainFrame.Position = UDim2.new(0.5,-110,0.5,-140)
MainFrame.BackgroundColor3 = Color3.fromRGB(40,40,40)
MainFrame.Visible = false
MainFrame.Parent = ScreenGui

-- Header (drag area)
local Header = Instance.new("TextLabel")
Header.Size = UDim2.new(1,0,0,25)
Header.BackgroundColor3 = Color3.fromRGB(30,30,30)
Header.Text = " Utility Hub "
Header.TextColor3 = Color3.fromRGB(255,255,255)
Header.Parent = MainFrame
Header.Active = true
Header.Draggable = true

-- Toggle GUI
ToggleBtn.MouseButton1Click:Connect(function()
    MainFrame.Visible = not MainFrame.Visible
end)

------------------------------------------------
-- Auto Click
local AutoClickEnabled = false
local AutoClickBtn = Instance.new("TextButton", MainFrame)
AutoClickBtn.Size = UDim2.new(0,200,0,30)
AutoClickBtn.Position = UDim2.new(0,10,0,40)
AutoClickBtn.Text = "Auto Click: OFF"

local function doAutoClick()
    while AutoClickEnabled do
        task.wait(0.1)
        pcall(function()
            local char = LocalPlayer.Character
            if char and char:FindFirstChildOfClass("Tool") then
                char:FindFirstChildOfClass("Tool"):Activate()
            end
        end)
    end
end

local function toggleAutoClick()
    AutoClickEnabled = not AutoClickEnabled
    AutoClickBtn.Text = "Auto Click: " .. (AutoClickEnabled and "ON" or "OFF")
    if AutoClickEnabled then task.spawn(doAutoClick) end
end

AutoClickBtn.MouseButton1Click:Connect(toggleAutoClick)

-- Hotkey F5
UserInputService.InputBegan:Connect(function(input, gp)
    if not gp and input.KeyCode == Enum.KeyCode.F5 then
        toggleAutoClick()
    end
end)

------------------------------------------------
-- Noclip
local NoclipEnabled = false
local NoclipConnection
local NoclipBtn = Instance.new("TextButton", MainFrame)
NoclipBtn.Size = UDim2.new(0,200,0,30)
NoclipBtn.Position = UDim2.new(0,10,0,80)
NoclipBtn.Text = "Noclip: OFF"

local function enableNoclip()
    if not NoclipConnection then
        NoclipConnection = RunService.Stepped:Connect(function()
            if NoclipEnabled then
                local char = LocalPlayer.Character
                if char then
                    for _, part in pairs(char:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.CanCollide = false
                        end
                    end
                end
            end
        end)
    end
end

local function disableNoclip()
    if NoclipConnection then
        NoclipConnection:Disconnect()
        NoclipConnection = nil
    end
    local char = LocalPlayer.Character
    if char then
        for _, part in pairs(char:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end

NoclipBtn.MouseButton1Click:Connect(function()
    NoclipEnabled = not NoclipEnabled
    NoclipBtn.Text = "Noclip: " .. (NoclipEnabled and "ON" or "OFF")
    if NoclipEnabled then
        enableNoclip()
    else
        disableNoclip()
    end
end)

------------------------------------------------
-- Infinity Jump
local InfJumpEnabled = false
local InfJumpBtn = Instance.new("TextButton", MainFrame)
InfJumpBtn.Size = UDim2.new(0,200,0,30)
InfJumpBtn.Position = UDim2.new(0,10,0,120)
InfJumpBtn.Text = "Infinity Jump: OFF"

UserInputService.JumpRequest:Connect(function()
    if InfJumpEnabled then
        local char = LocalPlayer.Character
        if char and char:FindFirstChildOfClass("Humanoid") then
            char:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

InfJumpBtn.MouseButton1Click:Connect(function()
    InfJumpEnabled = not InfJumpEnabled
    InfJumpBtn.Text = "Infinity Jump: " .. (InfJumpEnabled and "ON" or "OFF")
end)

------------------------------------------------
-- Auto Spawn
local AutoSpawnEnabled = false
local AutoSpawnBtn = Instance.new("TextButton", MainFrame)
AutoSpawnBtn.Size = UDim2.new(0,200,0,30)
AutoSpawnBtn.Position = UDim2.new(0,10,0,160)
AutoSpawnBtn.Text = "Auto Spawn: OFF"

local function doAutoSpawn()
    while AutoSpawnEnabled do
        task.wait(1)
        pcall(function()
            local gui = LocalPlayer:FindFirstChild("PlayerGui")
            if gui then
                local spawnBtn = gui:FindFirstChild("Spawn", true)
                if spawnBtn and spawnBtn:IsA("GuiButton") then
                    spawnBtn:Activate()
                end
            end
        end)
    end
end

AutoSpawnBtn.MouseButton1Click:Connect(function()
    AutoSpawnEnabled = not AutoSpawnEnabled
    AutoSpawnBtn.Text = "Auto Spawn: " .. (AutoSpawnEnabled and "ON" or "OFF")
    if AutoSpawnEnabled then task.spawn(doAutoSpawn) end
end)

------------------------------------------------
-- Godmode
local GodEnabled = false
local GodBtn = Instance.new("TextButton", MainFrame)
GodBtn.Size = UDim2.new(0,200,0,30)
GodBtn.Position = UDim2.new(0,10,0,200)
GodBtn.Text = "Godmode: OFF"

local function doGodmode()
    while GodEnabled do
        task.wait(0.1)
        local char = LocalPlayer.Character
        if char and char:FindFirstChildOfClass("Humanoid") then
            local hum = char:FindFirstChildOfClass("Humanoid")
            hum.Health = hum.MaxHealth
        end
    end
end

GodBtn.MouseButton1Click:Connect(function()
    GodEnabled = not GodEnabled
    GodBtn.Text = "Godmode: " .. (GodEnabled and "ON" or "OFF")
    if GodEnabled then task.spawn(doGodmode) end
end)
